---
- name: Get etcd endpoint
  k8s_info:
    kind: Pod
    namespace: openshift-etcd
    field_selectors:
      - status.phase=Running
  register: etcd_pod

- name: Create a namespace
  k8s:
    name: "{{ openshift_etcd_backup_namespace }}"
    api_version: v1
    kind: Namespace
    state: present
    # metadata:
    #   annotations:
    #     openshift.io/node-selector: node-role.kubernetes.io/master=true

# To Fix: As soon the module is fixed to set metadata on namespace objects, use the module instead and delete the workaround
- name: Change default nodeSelector to masters
  command: "oc patch namespace {{ openshift_etcd_backup_namespace }} \
            -p '{ \"metadata\":{ \"annotations\":{ \"openshift.io/node-selector\":\"node-role.kubernetes.io/master=\"} }}'"

- name: Create CronJob for openshift-etcd-backup
  k8s:
    namespace: "{{ openshift_etcd_backup_namespace }}"
    state: present
    definition:
      kind: CronJob
      apiVersion: batch/v1beta1
      metadata:
        name: "{{ openshift_etcd_backup_job_name }}"
        namespace: "{{ openshift_etcd_backup_namespace }}"
      spec:
        schedule: "{{ openshift_etcd_backup_schedule }}"
        concurrencyPolicy: Forbid
        jobTemplate:
          spec:
            template:
              spec:
                containers:
                  - name: "{{ openshift_etcd_backup_job_name }}"
                    image: "{{ openshift_etcd_backup_image }}:{{ openshift_etcd_backup_image_tag }}"
                    securityContext:
                      privileged: true
                    command:
                      - "/bin/bash"
                      - "-c"
                      - "/usr/local/bin/etcd-snapshot-backup.sh /backup && find /backup/* -mtime +{{ openshift_etcd_backup_retention_time }} -delete"
                    env:
                      - name: "ETCDCTL_ENDPOINTS"
                        value: "{{ etcd_pod.resources[1].status.podIP }}:2379"
                    volumeMounts:
                      - name: cluster-etcd-script
                        mountPath: /usr/local/bin/
                      - name: cluster-etcd-config
                        mountPath: /etc/kubernetes
                      - name: cluster-etcd-data
                        mountPath: /var/lib/etcd
                      - name: cluster-recovery-tools
                        mountPath: /usr/local/bin/openshift-recovery-tools
                      - name: backupdir
                        mountPath: /backup
                restartPolicy: Never
                terminationGracePeriodSeconds: 30
                activeDeadlineSeconds: "{{ openshift_etcd_backup_deadline }}"
                dnsPolicy: ClusterFirst
                tolerations:
                - effect: NoSchedule
                  key: node-role.kubernetes.io/master
                serviceAccountName: "{{ openshift_etcd_backup_job_service_account }}"
                serviceAccount: "{{ openshift_etcd_backup_job_service_account }}"
                volumes:
                  - name: cluster-etcd-script
                    hostPath:
                      path: /usr/local/bin/
                  - name: cluster-etcd-config
                    hostPath:
                      path: /etc/kubernetes
                  - name: cluster-etcd-data
                    hostPath:
                      path: /var/lib/etcd
                  - name: cluster-recovery-tools
                    hostPath:
                      path: /usr/local/bin/openshift-recovery-tools
                  - name: backupdir
                    persistentVolumeClaim:
                      claimName: etcd-backup

- name: Create PersistentVolumeClaim for openshift-etcd-backup
  k8s:
    namespace: "{{ openshift_etcd_backup_namespace }}"
    state: present
    definition:
      apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: etcd-backup
        namespace: "{{ openshift_etcd_backup_namespace }}"
      spec:
        storageClassName: "{{ openshift_etcd_backup_storageclass }}"
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: "{{ openshift_etcd_backup_storage_size }}"


- name: Create ServiceAccount for openshift-etcd-backup
  k8s:
    namespace: "{{ openshift_etcd_backup_namespace }}"
    state: present
    definition:
      kind: ServiceAccount
      apiVersion: v1
      metadata:
        namespace: "{{ openshift_etcd_backup_namespace }}"
        name: "{{ openshift_etcd_backup_job_service_account }}"
